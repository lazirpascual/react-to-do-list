{"version":3,"sources":["components/TaskCard.js","components/Overview.js","App.js","components/Layout.js","index.js"],"names":["useStyles","makeStyles","theme","purple","color","palette","getContrastText","backgroundColor","description","paddingLeft","spacing","TaskCard","props","classes","task","deleteTask","updateTask","updateDescription","Card","variant","CardHeader","avatar","Avatar","className","action","IconButton","onClick","id","title","TextField","value","text","label","onChange","e","target","type","CardContent","Typography","multiline","fullWidth","rows","Overview","tasks","taskList","map","Grid","item","xs","md","lg","Container","container","App","handleChangeTask","setState","state","addTask","preventDefault","concat","uniqid","key","filteredTasks","filter","updatedTasks","forEach","saveAllTasks","deleteAllTasks","bind","this","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","justify","Button","endIcon","component","gutterBottom","onSubmit","Box","mt","mb","required","Component","drawerWidth","page","background","width","padding","root","display","drawer","drawerPaper","active","appBar","marginLeft","date","flexGrow","toolbar","mixins","Layout","children","AppBar","position","elevation","Toolbar","format","Date","Drawer","paper","anchor","List","ListItem","button","ListItemIcon","AddCircleOutlineOutlined","ListItemText","primary","createMuiTheme","main","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d59c8881.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { purple } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  purple: {\n    color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: purple[200],\n  },\n  description: {\n    paddingLeft: theme.spacing(3),\n  },\n}));\n\nexport default function TaskCard(props) {\n  const classes = useStyles();\n  const { task, deleteTask, updateTask, updateDescription } = props;\n  return (\n    <div>\n      <Card variant=\"Media\">\n        <CardHeader\n          avatar={\n            <Avatar className={classes.purple}>\n              <FolderIcon />\n            </Avatar>\n          }\n          action={\n            <IconButton onClick={() => deleteTask(task.id)}>\n              <DeleteOutlined />\n            </IconButton>\n          }\n          title={\n            <TextField\n              value={task.text}\n              label=\"Task\"\n              onChange={(e) => updateTask(e.target.value, task.id)}\n              key={task.id}\n              type=\"text\"\n              variant=\"standard\"\n              color=\"secondary\"\n            ></TextField>\n          }\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {\n              <TextField\n                label=\"Description\"\n                value={task.description}\n                onChange={(e) => updateDescription(e.target.value, task.id)}\n                key={task.id}\n                type=\"text\"\n                variant=\"filled\"\n                color=\"secondary\"\n                multiline\n                fullWidth\n                rows={4}\n              ></TextField>\n            }\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TaskCard from \"./TaskCard\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Overview = (props) => {\n  const { tasks, deleteTask, updateTask, updateDescription } = props;\n\n  const taskList = tasks.map((task) => (\n    <Grid item xs={12} md={6} lg={4} key={task.id}>\n      <TaskCard\n        task={task}\n        deleteTask={deleteTask}\n        updateTask={updateTask}\n        updateDescription={updateDescription}\n      />\n    </Grid>\n  ));\n\n  return (\n    <Container>\n      <Grid container spacing={5}>\n        {taskList}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Overview;\n","import React, { Component } from \"react\";\nimport Overview from \"./components/Overview\";\nimport uniqid from \"uniqid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      task: {\n        text: \"\",\n        description: \"\",\n        id: uniqid(),\n      },\n      tasks: [],\n    };\n\n    this.deleteTask = this.deleteTask.bind(this);\n    this.updateTask = this.updateTask.bind(this);\n    this.updateDescription = this.updateDescription.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      tasks: JSON.parse(localStorage.getItem(\"tasks\")) || [],\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.tasks !== this.state.tasks) {\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\n    }\n  }\n\n  handleChangeTask = (e) => {\n    this.setState({\n      task: {\n        text: e.target.value,\n        id: this.state.task.id,\n      },\n    });\n  };\n\n  addTask = (e) => {\n    e.preventDefault();\n    this.setState({\n      tasks: this.state.tasks.concat(this.state.task),\n      task: {\n        text: \"\",\n        description: \"\",\n        id: uniqid(),\n      },\n    });\n  };\n\n  deleteTask = (key) => {\n    const filteredTasks = this.state.tasks.filter((item) => item.id !== key);\n    this.setState({\n      tasks: filteredTasks,\n    });\n  };\n\n  updateTask = (text, key) => {\n    const updatedTasks = this.state.tasks;\n    updatedTasks.forEach((item) => {\n      if (item.id === key) {\n        item.text = text;\n      }\n    });\n    this.setState({\n      tasks: updatedTasks,\n    });\n  };\n\n  updateDescription = (text, key) => {\n    const updatedTasks = this.state.tasks;\n    updatedTasks.forEach((item) => {\n      if (item.id === key) {\n        item.description = text;\n      }\n    });\n    this.setState({\n      tasks: updatedTasks,\n    });\n  };\n\n  saveAllTasks = () => {\n    const filteredTasks = this.state.tasks.filter((item) => item);\n    this.setState({\n      tasks: filteredTasks,\n    });\n  };\n\n  deleteAllTasks = () => {\n    this.setState({\n      tasks: [],\n    });\n  };\n\n  render() {\n    const { task, tasks } = this.state;\n\n    return (\n      <Container>\n        <Grid container>\n          <Grid container justify=\"flex-end\" spacing={3}>\n            <Grid item>\n              <Button\n                type=\"submit\"\n                onClick={this.saveAllTasks}\n                color=\"primary\"\n                variant=\"contained\"\n                endIcon={<DoneAllIcon />}\n              >\n                Save All Tasks\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                type=\"submit\"\n                onClick={this.deleteAllTasks}\n                color=\"default\"\n                variant=\"contained\"\n                endIcon={<DeleteSweepIcon />}\n              >\n                Delete All Tasks\n              </Button>\n            </Grid>\n          </Grid>\n          <Typography\n            variant=\"h3\"\n            component=\"h2\"\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Create a New Task\n          </Typography>\n        </Grid>\n        <form onSubmit={this.addTask}>\n          <Box mt={2} mb={4}>\n            <TextField\n              onChange={this.handleChangeTask}\n              value={task.text}\n              label=\"Task\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              fullWidth\n              required\n            ></TextField>\n          </Box>\n          <Box mb={6}>\n            <Button\n              type=\"submit\"\n              color=\"secondary\"\n              variant=\"contained\"\n              endIcon={<KeyboardArrowRightIcon />}\n            >\n              Add Task\n            </Button>\n          </Box>\n        </form>\n\n        <Overview\n          tasks={tasks}\n          deleteTask={this.deleteTask}\n          updateTask={this.updateTask}\n          updateDescription={this.updateDescription}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { AddCircleOutlineOutlined } from \"@material-ui/icons\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { format } from \"date-fns\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n      padding: theme.spacing(3),\n    },\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    date: {\n      flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    avatar: {\n      marginLeft: theme.spacing(2),\n    },\n  };\n});\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n      <AppBar\n        position=\"fixed\"\n        className={classes.appBar}\n        elevation={0}\n        color=\"primary\"\n      >\n        <Toolbar>\n          <Typography className={classes.date}>\n            Today is the {format(new Date(), \"do MMMM Y\")}\n          </Typography>\n          <Typography>User</Typography>\n          <Avatar className={classes.avatar}>U</Avatar>\n        </Toolbar>\n      </AppBar>\n\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n        anchor=\"left\"\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            Projects\n          </Typography>\n        </div>\n        <List>\n          <ListItem button>\n            <ListItemIcon>\n              <AddCircleOutlineOutlined color=\"secondary\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Create Project\" />\n          </ListItem>\n        </List>\n      </Drawer>\n\n      {/* main content */}\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Layout from \"./components/Layout\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { purple } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#E6E6FA\",\n    },\n    secondary: purple,\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <App />\n      </Layout>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}